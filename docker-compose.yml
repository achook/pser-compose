services:
  influxdb:
    image: influxdb:alpine
    container_name: influxdb
    ports:
      - '8086:8086'
    volumes:
      - influxdb-storage:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=db0
      - INFLUXDB_ADMIN_USER=${INFLUXDB_USERNAME}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${DOCKER_INFLUXDB_INIT_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${DOCKER_INFLUXDB_INIT_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}
  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana-provisioning/:/etc/grafana/provisioning
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}

  adapter:
    build: ./adapter
    container_name: adapter
    depends_on:
      - influxdb
    environment:
      - MQTT_DATA_TOPIC=psertest
      - MQTT_ALARM_TOPIC=psertest2
      - MQTT_SILENCE_TOPIC=psertest3
      - MQTT_SERVER_ADDRESS=mqtt-dashboard.com
      - MQTT_SERVER_PORT=1883
      - INFLUX_ADDRESS=http://influxdb:8086
      - INFLUX_PORT=8086
      - INFLUX_USER=admin
      - INFLUX_TOKEN=admin_token
      - INFLUX_ORG=pser_umu
      - INFLUX_BUCKET=pser_umu_bucket

volumes:
  influxdb-storage:
  grafana-storage:
